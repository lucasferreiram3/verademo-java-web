name: security-action
on:
  push:
    branches: [veracode-actions2]

jobs:
  build:
    name: build maven
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
    - name: build maven
      run: |
        mvn clean package install
        pwd
        ls -l  
    - name: salvando artefato
      uses: actions/upload-artifact@v4
      with:
          name: pacoteVeracode
          path: target/verademo.war

  veracode-sca:
    runs-on: ubuntu-latest
    name: veracode sca
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: veracode sca scan
        env: 
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: curl -sSL https://download.sourceclear.com/ci.sh | sh -s scan --update-advisor --uri-as-name --ref ${{ github.ref_name }}

  veracode-container-iac-secrets-scan:
    runs-on: ubuntu-latest
    name: Veracode Container/IaC/Secrets scan
    needs: [ build ]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Veracode Container/IaC/Secrets action step
        uses: veracode/container_iac_secrets_scanning@v1.0.3
        with:
          vid: '${{ secrets.VERACODE_ID }}'
          vkey: '${{ secrets.VERACODE_KEY }}'
          command: "scan" 
          type: "directory"
          source: "./"
          format: "table"
          debug: false
          fail_build: false

  Veracode_SandboxScan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artefato
        uses: actions/download-artifact@v4
        with:
          name: pacoteVeracode
      - name: Veracode Sandbox Scan
        env:
          VID: ${{ secrets.VERACODE_ID }} # Lembrar de criar as credenciais no Secrets
          VKEY: ${{ secrets.VERACODE_KEY }}
        run: |
          curl -o veracode-wrapper.jar https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/24.7.14.0/vosp-api-wrappers-java-24.7.14.0.jar
          java -jar veracode-wrapper.jar -vid $VID -vkey $VKEY -action uploadandscan -appname  ${{ github.repository }} -createprofile true -teams 'Default' -filepath 'verademo.war' -createsandbox true -sandboxname ${{ github.ref }} -deleteincompletescan 2 -version ${{ github.run_id }}

  Veracode_PolicyScan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artefato
        uses: actions/download-artifact@v4
        with:
          name: pacoteVeracode
      - name: Veracode policy Scan
        env:
          VID: ${{ secrets.VERACODE_ID }} # Lembrar de criar as credenciais no Secrets
          VKEY: ${{ secrets.VERACODE_KEY }}
        run: |
          curl -o veracode-wrapper.jar https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/24.7.14.0/vosp-api-wrappers-java-24.7.14.0.jar
          java -jar veracode-wrapper.jar -vid $VID -vkey $VKEY -action uploadandscan -appname  ${{ github.repository }} -createprofile true -teams 'Default' -filepath 'verademo.war' -deleteincompletescan 2 -version ${{ github.run_id }}

  Veracode_PipelineScan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artefato
        uses: actions/download-artifact@v4
        with:
          name: pacoteVeracode
      - name: Veracode Pipeline Scan
        env:
          VID: ${{ secrets.VERACODE_ID }} # Lembrar de criar as credenciais no Secrets
          VKEY: ${{ secrets.VERACODE_KEY }}
        run: |
          curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
          unzip pipeline-scan-LATEST.zip
          java -jar pipeline-scan.jar -vid $VID -vkey $VKEY -f 'verademo.war' --issue_details true
